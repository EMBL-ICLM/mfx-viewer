function apply_filter_to_data (app)
    % disp("apply filter takes:");
    % tic;

    %ftr = app.data.attr.ftr;
    idx = get_active_data_index(app);
    if isempty(idx)
        return;
    end
    data = app.data{idx};
    name = data.file.name;

    window_all = app.CallingApp.children_apps; %findall(groot(), 'Type', 'figure');
    tag_match = cellfun(@(win) startsWith(win.Tag, 'figure_'), window_all, 'uni', 0);
    match = cell2mat( tag_match' );
    window_all( ~match ) = [];
    name_match = cellfun(@(win) contains(win.Name, name), window_all, 'uni', 0);
    match = cell2mat( name_match' );
    window_all( ~match ) = [];

    if isempty(window_all)
        return;
    end

    for i = 1 : length(window_all)

        switch window_all{i}.Tag

            case "figure_attribute"
                fig = plot_attribute (app);
                line_plot = findobj(fig, 'Type', 'line');
                line_plot.XData = app.val_1(app.ftr, :);
                line_plot.YData = app.val_2(app.ftr, :);

            case "figure_histogram"
                fig = plot_histogram (app);
                hist_plot = findobj(fig,)
                
            case "figure_scatter"
                fig = plot_scatter (app);
                sc_handle = findobj(fig, 'Type', 'scatter');
                if ~isempty(sc_handle)
                    sc_handle.CData = cdata;
                end
            case "figure_render"
                fig = render_localization (app);

        end
    end

        
        app.children_apps{i} = fig;


        % sc_handle = findobj(fig, 'Type', 'scatter');
        % if ~isempty(sc_handle)
        %     sc_handle.CData = cdata;
        % end
        % img_handle = findobj(fig, 'Type', 'image');
        % if ~isempty(img_handle)
        %     img_handle.CData = cdata;
        % end
        % 
        % 
        % 
        % app.linePlot.XData = app.val_1(app.ftr, :);
        % app.linePlot.YData = app.val_2(app.ftr, :);
        % 
        % app.val_hist = getHistPlotValue (app);


    end

    % toc;
end